/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package givemesomerest;

import givemesomerest.entities.Prediction;
import io.javalin.Javalin;
import io.javalin.http.Context;
import org.jetbrains.annotations.NotNull;

import java.util.HashMap;
import java.util.Map;

public class App {

    private static final Map<String, Prediction> DB = new HashMap<>();

    static {
        DB.put("bergen", new Prediction("sunny", 12.5, false));
        DB.put("oslo", new Prediction("raining", 7.2, false));
    }

    public static void main(String[] args) {
        // create server
        Javalin javalin = Javalin.create(/*config*/);
        // register handlers
        javalin.get("/", App::handleRoot);

        javalin.get("/predictions/{location}", App::handleGetPredictionAtLocation);
        javalin.post("/predictions/{location}", App::handleNewLocation);

        //start server
        javalin.start(7070);
    }

    private static void handleNewLocation(Context context) {
        String location = context.pathParam("location");
        Prediction prediction = context.bodyAsClass(Prediction.class);
        if (!DB.containsKey(location)) {
            if (prediction.getWeather().contains("rain")) {
                prediction.setShouldUserUmbrella(true);
            }
            DB.put(location, prediction);
            context.status(201); // Created
        } else {
            context.status(401); // Forbidden
        }

    }

    private static void handleGetPredictionAtLocation(Context context) {
        String location = context.pathParam("location");
        if (DB.containsKey(location)) {
            context.json(DB.get(location));
        } else {
            context.status(404); // Not found
        }
    }


    @NotNull
    private static Context handleRoot(Context ctx) {
        return ctx.result("It works");
    }


}
